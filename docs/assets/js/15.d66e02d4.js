(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{199:function(e,s,t){"use strict";t.r(s);var a=t(0),n=Object(a.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"deployment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deployment","aria-hidden":"true"}},[e._v("#")]),e._v(" Deployment")]),e._v(" "),t("p",[e._v("The deployment uses the "),t("strong",[e._v("serverless")]),e._v(" framework. If you require some help setting up serverless, "),t("a",{attrs:{href:"https://serverless.com/blog/anatomy-of-a-serverless-app/#setup",target:"_blank",rel:"noopener noreferrer"}},[e._v("follow the instructions here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"deploy-to-aws"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-aws","aria-hidden":"true"}},[e._v("#")]),e._v(" Deploy to AWS")]),e._v(" "),t("p",[e._v("To deploy your application just run "),t("code",[e._v("mug deploy")]),e._v(". This will do the following:")]),e._v(" "),t("ol",[t("li",[e._v("Generate a Makefile for the resource or function group.")]),e._v(" "),t("li",[e._v("Build binaries in the "),t("code",[e._v("bin")]),e._v(" folder using "),t("code",[e._v("make build")]),e._v(" defined in the "),t("code",[e._v("Makefile")]),e._v(".")]),e._v(" "),t("li",[e._v("Generate a "),t("code",[e._v("serverless.yml")]),e._v(".")]),e._v(" "),t("li",[e._v("Run "),t("code",[e._v("sls deploy")]),e._v(" from each directory of resources or function groups.")])]),e._v(" "),t("p",[t("strong",[e._v("This will deploy your app to AWS and you can now develop against your new serverless API! Yeah!")])]),e._v(" "),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("Just like "),t("code",[e._v("mug debug")]),e._v(" you can define a list of resources/ function groups, you wish to deploy, in case you do not want to deploy all of them. Just set the "),t("code",[e._v("-l")]),e._v(" "),t("strong",[e._v("list")]),e._v(" flag and provide a comma separated list (e.g. "),t("code",[e._v('mug deploy -l "user,course"')]),e._v(" which will only deploy the "),t("strong",[e._v("user")]),e._v(" and "),t("strong",[e._v("course")]),e._v(" resources).")])]),e._v(" "),t("h2",{attrs:{id:"deploying-with-secrets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deploying-with-secrets","aria-hidden":"true"}},[e._v("#")]),e._v(" Deploying with secrets")]),e._v(" "),t("p",[e._v("In case you have environment variables, you want to have added to your "),t("code",[e._v("serverless.yml")]),e._v(" especially for those, you may not want to share in your git repository, you can easily create a "),t("code",[e._v("secrets.yml")]),e._v(" file for that resource/ function group (where "),t("code",[e._v("serverless.yml")]),e._v(" file is), which will be parsed during creation/ update of the "),t("code",[e._v("serverless.yml")]),e._v(".\nThe environments will then be loaded to the environments section.")]),e._v(" "),t("p",[e._v("For example:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("API_KEY = Example\nCOGNITO_USERPOOL_ARN = 'arn:aws:cognito-idp:eu-central-1:XXXXXXXXXXXX:userpool/eu-central-1_XXXXXXXXX'\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("will result in an "),t("code",[e._v("serverless.yml")]),e._v(" like this:")]),e._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" example\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("provider")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" aws\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("runtime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" go1.x\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("region")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eu-central-1"')]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("stage")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("opt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("stage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dev'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("API_KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("file(./secrets.yml)"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("API_KEY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("COGNITO_USERPOOL_ARN")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("file(./secrets.yml)"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("COGNITO_USERPOOL_ARN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("div",{staticClass:"tip custom-block"},[t("p",[e._v("Simply adding your "),t("code",[e._v("secrets.yml")]),e._v(" to your "),t("code",[e._v(".gitignore")]),e._v(" would be a good practice to pass environment variables to your lambda function without exposing them to the world.")])])])},[],!1,null,null,null);s.default=n.exports}}]);